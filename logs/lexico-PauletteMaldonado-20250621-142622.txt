Análisis léxico de: algoritmo1_Paulette_Maldonado.rb
==================================================
Línea 2: DEF                  def
Línea 2: ID                   gestion_inventario
Línea 3: ID                   inventario
Línea 3: ASIGNACION           =
Línea 3: CORCHETE_IZQ         [
Línea 3: CORCHETE_DER         ]
Línea 5: LOOP                 loop
Línea 5: DO                   do
Línea 6: PUTS                 puts
Línea 6: CADENA               \n1. Agregar | 2. Buscar | 3. Eliminar | 4. Salir
Línea 7: ID                   opcion
Línea 7: ASIGNACION           =
Línea 7: GETS                 gets
Línea 7: PUNTO                .
Línea 7: TO_I                 to_i
Línea 9: CASE                 case
Línea 9: ID                   opcion
Línea 10: WHEN                 when
Línea 10: ENTERO               1
Línea 11: BEGIN                begin
Línea 12: PUTS                 puts
Línea 12: CADENA               Nombre del producto:
Línea 13: ID                   nombre
Línea 13: ASIGNACION           =
Línea 13: GETS                 gets
Línea 13: PUNTO                .
Línea 13: ID                   strip
Línea 14: ID                   raise
Línea 14: CADENA               Nombre no puede estar vacío
Línea 14: IF                   if
Línea 14: ID                   nombre
Línea 14: PUNTO                .
Línea 14: CONSULTA_VACIA       empty?
Línea 16: PUTS                 puts
Línea 16: CADENA               Precio (USD):
Línea 17: ID                   precio
Línea 17: ASIGNACION           =
Línea 17: ID                   Float
Línea 17: PARENTESIS_IZQ       (
Línea 17: GETS                 gets
Línea 17: PARENTESIS_DER       )
Línea 17: RESCUE               rescue
Línea 17: NIL                  nil
Línea 18: ID                   raise
Línea 18: CADENA               Precio debe ser un número
Línea 18: IF                   if
Línea 18: ID                   precio
Línea 18: PUNTO                .
Línea 18: METODO_PREGUNTA      nil?
Línea 20: PUTS                 puts
Línea 20: CADENA               Stock:
Línea 21: ID                   stock
Línea 21: ASIGNACION           =
Línea 21: ID                   Integer
Línea 21: PARENTESIS_IZQ       (
Línea 21: GETS                 gets
Línea 21: PARENTESIS_DER       )
Línea 21: RESCUE               rescue
Línea 21: NIL                  nil
Línea 22: ID                   raise
Línea 22: CADENA               Stock debe ser entero
Línea 22: IF                   if
Línea 22: ID                   stock
Línea 22: PUNTO                .
Línea 22: METODO_PREGUNTA      nil?
Línea 24: ID                   producto
Línea 24: ASIGNACION           =
Línea 24: LLAVE_IZQ            {
Línea 24: ID                   nombre
Línea 24: DOS_PUNTOS           :
Línea 24: ID                   nombre
Línea 24: COMA                 ,
Línea 24: ID                   precio
Línea 24: DOS_PUNTOS           :
Línea 24: ID                   precio
Línea 24: COMA                 ,
Línea 24: ID                   stock
Línea 24: DOS_PUNTOS           :
Línea 24: ID                   stock
Línea 24: LLAVE_DER            }
Línea 25: ID                   inventario
Línea 25: MENOR_QUE            <
Línea 25: MENOR_QUE            <
Línea 25: ID                   producto
Línea 26: PUTS                 puts
Línea 26: CADENA_INTERPOLADA   Producto añadido: #{producto[:nombre]}
Línea 27: RESCUE               rescue
Línea 27: ASIGNACION_HASH      =>
Línea 27: ID                   e
Línea 28: PUTS                 puts
Línea 28: CADENA_INTERPOLADA   Error: #{e.message}
Línea 29: END                  end
Línea 31: WHEN                 when
Línea 31: ENTERO               2
Línea 32: PUTS                 puts
Línea 32: CADENA               Buscar por nombre:
Línea 33: ID                   busqueda
Línea 33: ASIGNACION           =
Línea 33: GETS                 gets
Línea 33: PUNTO                .
Línea 33: ID                   strip
Línea 33: PUNTO                .
Línea 33: ID                   downcase
Línea 34: ID                   resultados
Línea 34: ASIGNACION           =
Línea 34: ID                   inventario
Línea 34: PUNTO                .
Línea 34: ID                   select
Línea 34: LLAVE_IZQ            {
Línea 34: PIPE                 |
Línea 34: ID                   p
Línea 34: PIPE                 |
Línea 34: ID                   p
Línea 34: CORCHETE_IZQ         [
Línea 34: SIMBOLO              :nombre
Línea 34: CORCHETE_DER         ]
Línea 34: PUNTO                .
Línea 34: ID                   downcase
Línea 34: PUNTO                .
Línea 34: CONSULTA_INCLUDE     include?
Línea 34: PARENTESIS_IZQ       (
Línea 34: ID                   busqueda
Línea 34: PARENTESIS_DER       )
Línea 34: LLAVE_DER            }
Línea 36: IF                   if
Línea 36: ID                   resultados
Línea 36: PUNTO                .
Línea 36: CONSULTA_VACIA       empty?
Línea 37: PUTS                 puts
Línea 37: CADENA               No se encontraron productos.
Línea 38: ELSE                 else
Línea 39: ID                   resultados
Línea 39: PUNTO                .
Línea 39: EACH                 each
Línea 39: LLAVE_IZQ            {
Línea 39: PIPE                 |
Línea 39: ID                   p
Línea 39: PIPE                 |
Línea 39: PUTS                 puts
Línea 39: CADENA_INTERPOLADA   #{p[:nombre]} | $#{p[:precio]} | Stock: #{p[:stock]}
Línea 39: LLAVE_DER            }
Línea 40: END                  end
Línea 42: WHEN                 when
Línea 42: ENTERO               3
Línea 43: PUTS                 puts
Línea 43: CADENA               Eliminar por nombre:
Línea 44: ID                   nombre
Línea 44: ASIGNACION           =
Línea 44: GETS                 gets
Línea 44: PUNTO                .
Línea 44: ID                   strip
Línea 45: ID                   inventario
Línea 45: PUNTO                .
Línea 45: ID                   reject
Línea 45: NOT_LOGICO           !
Línea 45: LLAVE_IZQ            {
Línea 45: PIPE                 |
Línea 45: ID                   p
Línea 45: PIPE                 |
Línea 45: ID                   p
Línea 45: CORCHETE_IZQ         [
Línea 45: SIMBOLO              :nombre
Línea 45: CORCHETE_DER         ]
Línea 45: PUNTO                .
Línea 45: ID                   downcase
Línea 45: IGUAL                ==
Línea 45: ID                   nombre
Línea 45: PUNTO                .
Línea 45: ID                   downcase
Línea 45: LLAVE_DER            }
Línea 46: PUTS                 puts
Línea 46: CADENA               Producto eliminado.
Línea 48: WHEN                 when
Línea 48: ENTERO               4
Línea 49: BREAK                break
Línea 51: ELSE                 else
Línea 52: PUTS                 puts
Línea 52: CADENA               Opción no válida.
Línea 53: END                  end
Línea 54: END                  end
Línea 55: END                  end
Línea 57: ID                   gestion_inventario
